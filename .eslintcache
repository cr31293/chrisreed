[{"C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\index.js":"1","C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\App.js":"2","C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\reportWebVitals.js":"3","C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\components\\theme.js":"4","C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\pages\\Nav\\index.js":"5","C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\pages\\Home\\index.js":"6","C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\pages\\About\\index.js":"7","C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\pages\\Portfolio\\index.js":"8","C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\pages\\Resume\\index.js":"9","C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\components\\Description\\description.js":"10","C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\components\\Greeting\\greeting.js":"11","C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\components\\ContentContainer\\Content\\Home.js":"12","C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\components\\ContentContainer\\ContentContainer.js":"13","C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\components\\ContentContainer\\Content\\About.js":"14","C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\components\\ContentContainer\\Content\\Resume.js":"15","C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\components\\ContentContainer\\Content\\Portfolio.js":"16","C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\components\\Divider\\divider.js":"17","C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\pages\\Contact\\index.js":"18","C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\components\\ContentContainer\\Content\\Contact.js":"19","C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\components\\ContentContainer\\Content\\useMedia.js":"20"},{"size":478,"mtime":1611566208325,"results":"21","hashOfConfig":"22"},{"size":1774,"mtime":1611575959611,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1611566208355,"results":"24","hashOfConfig":"22"},{"size":102,"mtime":1611566208324,"results":"25","hashOfConfig":"22"},{"size":4115,"mtime":1611570969300,"results":"26","hashOfConfig":"22"},{"size":190,"mtime":1611566208337,"results":"27","hashOfConfig":"22"},{"size":204,"mtime":1611575826920,"results":"28","hashOfConfig":"22"},{"size":216,"mtime":1611566208349,"results":"29","hashOfConfig":"22"},{"size":305,"mtime":1611566208354,"results":"30","hashOfConfig":"22"},{"size":1027,"mtime":1611566208300,"results":"31","hashOfConfig":"22"},{"size":2285,"mtime":1611568091595,"results":"32","hashOfConfig":"22"},{"size":2778,"mtime":1611566208272,"results":"33","hashOfConfig":"22"},{"size":834,"mtime":1611566208297,"results":"34","hashOfConfig":"22"},{"size":3825,"mtime":1611579764044,"results":"35","hashOfConfig":"22"},{"size":1409,"mtime":1611582583331,"results":"36","hashOfConfig":"22"},{"size":6975,"mtime":1611579607306,"results":"37","hashOfConfig":"22"},{"size":359,"mtime":1611566208305,"results":"38","hashOfConfig":"22"},{"size":204,"mtime":1611575894680,"results":"39","hashOfConfig":"22"},{"size":555,"mtime":1611582398794,"results":"40","hashOfConfig":"22"},{"size":438,"mtime":1611581691794,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1ebwh9m",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"44"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"44"},"C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\index.js",[],["95","96"],"C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\App.js",["97"],"import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport theme from \"./components/theme\";\nimport Nav from \"./pages/Nav/index\";\nimport AboutPage from \"./pages/About/index\";\nimport HomePage from \"./pages/Home/index\";\nimport Portfolio from \"./pages/Portfolio\";\nimport Resume from \"./pages/Resume\";\nimport ContactPage from \"./pages/Contact/index\";\n\n\nconst useStyles = makeStyles((theme) => ({\n\n}))\n\nfunction App() {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n\n\n  return (\n    <>\n    <ThemeProvider \n      theme={theme}\n      \n    >\n      <Router>\n        <Nav value={value} setValue={setValue}  />\n         \n           \n              <Switch>\n                <Route\n                  exact\n                  path={process.env.PUBLIC_URL + \"/\" || \"/home\"}\n                  component={HomePage}\n                />\n                <Route\n                  exact\n                  path={process.env.PUBLIC_URL + \"/about\"}\n                  component={AboutPage}\n                />\n                <Route \n                  exact\n                  path={process.env.PUBLIC_URL + \"/portfolio\"}\n                  component={Portfolio}\n                />\n                <Route \n                  exact\n                  path={process.env.PUBLIC_URL + \"/resume\"}\n                  component={Resume}\n                />\n                <Route \n                  exact\n                  path={process.env.PUBLIC_URL + \"/contact\"}\n                  component={ContactPage}\n                />\n              </Switch>\n\n      </Router>\n    </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\reportWebVitals.js",[],"C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\components\\theme.js",[],"C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\pages\\Nav\\index.js",["98","99","100","101","102"],"import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Greeting from \"../../components/Greeting/greeting\";\r\nimport Description from \"../../components/Description/description\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiGrid-root\": {\r\n      width: \"38em\",\r\n      height: \"10em\",\r\n      display: \"inline\",\r\n    },\r\n    [theme.breakpoints.down(\"lg\")]: {\r\n      \"& .MuiGrid-root\": {\r\n        width: \"20em\",\r\n        height: \"8em\",\r\n      }\r\n    }\r\n  },\r\n  selectedInput: {\r\n    color: \"#374952\",\r\n    marginTop: \"0em\",\r\n    fontSize: \"3.5rem\",\r\n    marginLeft: \"1.5em\",\r\n    borderBottomStyle: \"none\",\r\n    borderBottomColor: \"#374952\",\r\n    width: \"100%\",\r\n    \"& .MuiListItemText-root\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    [theme.breakpoints.down('md')]: {\r\n      fontSize: \"2.5rem\",\r\n      marginLeft: \"-1.5em\"\r\n    }\r\n  },\r\n  gridContainerGreeting: {\r\n    display: \"flex\",\r\n    width: \"38%\",\r\n    height: \"10%\",\r\n  },\r\n  gridContainerNav: {\r\n    display: \"flex\",\r\n    width: \"30%\",\r\n    height: \"100%\",\r\n  },\r\n  navItems: {\r\n    width: \"30em\",\r\n    height: \"20em\",\r\n    marginTop: \"12em\"\r\n  },\r\n  [theme.breakpoints.down(\"lg\")]: {\r\n    width: \"20em\"\r\n  },\r\n}));\r\n\r\nexport default function Nav(props, theme) {\r\n  const classes = useStyles();\r\n  const [index, setIndex] = useState(0);\r\n\r\n  const handleChange = (e, value) => {\r\n    props.setValue(value)\r\n  };\r\n\r\n  const routes = [\r\n    { name: \"Home\", link: \"/\", activeIndex: 0 },\r\n    { name: \"About\", link: \"/about\", activeIndex: 1 },\r\n    { name: \"Portfolio\", link: \"/portfolio\", activeIndex: 2 },\r\n    { name: \"Resume\", link: \"/Resume\", activeIndex: 3 },\r\n    { name: \"Contact\", link: \"/Contact\", activeIndex: 4 },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    [...routes].forEach((route) => {\r\n      switch (window.location.pathname) {\r\n        case `${route.link}`:\r\n          if (props.value !== route.activeIndex) {\r\n            props.setValue(route.activeIndex);\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }, [props.value, routes, props]);\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        className={classes.gridContainerGreeting}\r\n        direction=\"column\"\r\n        justify=\"left\"\r\n      >\r\n        <Grid item>\r\n          <Greeting />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid \r\n        container \r\n        className={classes.gridContainerNav}\r\n        direction=\"column\" \r\n        justify=\"left\"\r\n      >\r\n        <Grid \r\n          item\r\n          className={classes.navItems}\r\n        >\r\n          <Description style={{ height: \"55em\", width: \"50%\" }}>\r\n            <List value={props.value} onChange={handleChange}>\r\n              {routes.map((route) => (\r\n                <Description style={{ height: \"3em\", width: \"17em\" }}>\r\n                  <ListItem\r\n                    style={{ \r\n                      backgroundColor: \"transparent\", \r\n                    }}\r\n                    disableGutters\r\n                    key={`${route}${route.activeIndex}`}\r\n                    component={Link}\r\n                    to={route.link}\r\n                    label={route.name}\r\n                    selected={props.value === route.activeIndex}\r\n                    onClick={\r\n                      (index) => {\r\n                      console.log(index);\r\n                      props.setValue(route.activeIndex);\r\n                  }}\r\n                    classes={{ selected: classes.selectedInput }}\r\n                  >\r\n                    <ListItemText disableTypography >{route.name}</ListItemText>\r\n                  </ListItem>\r\n                </Description>\r\n              ))}\r\n            </List>\r\n          </Description>\r\n        </Grid>\r\n      </Grid>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n","C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\pages\\Home\\index.js",[],"C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\pages\\About\\index.js",[],"C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\pages\\Portfolio\\index.js",[],"C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\pages\\Resume\\index.js",["103","104"],"import React from 'react';\r\nimport ResumePage from '../../components/ContentContainer/Content/Resume';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function Resume() {\r\n  return (\r\n    <>\r\n      <ResumePage />\r\n\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\components\\Description\\description.js",["105"],"import React, { useState } from 'react';\r\nimport { useTrail, a } from 'react-spring';\r\nimport './styles.css';\r\n\r\n\r\nexport default function Description({ children, ...props }) {\r\n  const items = React.Children.toArray(children)\r\n  const [open, set] = useState(true);\r\n\r\n  const trail = useTrail(items.length, {\r\n    config: { mass: 5, tension: 2000, friction: 500 },\r\n    delay: 750,\r\n    opacity: open ? 1 : 0,\r\n    x: open ? 0 : 20,\r\n    height: open ? 85 : 0,\r\n    from: { opacity: 0, x: 20, height: 0 },\r\n    \r\n\r\n    \r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"trails-main\" open={open} {...props}>\r\n        <div>\r\n          {trail.map(({ x, height, ...rest }, index) => (\r\n            <a.div\r\n              key={items[index]}\r\n              className=\"trails-text\"\r\n              style={{ ...rest, transform: x.interpolate((x) => `translate3d(0,${x}px,0)`) }}>\r\n                <a.div style={{ height, }}>{items[index]}</a.div>\r\n              </a.div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\components\\Greeting\\greeting.js",["106"],"import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"../Divider/divider\";\n\nconst useStyles = makeStyles((theme) => ({\n  greeting: {\n    color: \"#374952\",\n    textTransform: \"uppercase\",\n    marginTop: \"1em\",\n    marginLeft: \"0.75em\",\n    fontSize: \"2.5rem\",\n    transitionDelay: \"5000\",\n    fontFamily: \"Roboto Mono\",\n    wordSpacing: -5,\n    width: \"25em\",\n    [theme.breakpoints.down(\"lg\")]: {\n      width: \"20em\",\n      fontSize: \"2rem\"\n    },\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"20em\",\n      fontSize: \"1.5rem\"\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"1rem\",\n      marginLeft: \".25em\"\n    }\n  },\n  name: {\n    color: \"#374952\",\n    textTransform: \"uppercase\",\n    fontSize: \"3.5rem\",\n    fontFamily: \"Roboto Mono\",\n    [theme.breakpoints.down(\"lg\")]: {\n      fontSize: \"3rem\"\n    },\n    [theme.breakpoints.down(\"md\")]: {\n      fontSize: \"2.5rem\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"1.5rem\"\n    }\n\n  },\n  fullStackItem: {\n    height: \"5em\",\n\n  },\n  fullStack: {\n    color: \"#374952\",\n    textTransform: \"uppercase\",\n    fontSize: \"2rem\",\n    marginTop: \".5em\",\n    marginLeft: \"3em\",\n    [theme.breakpoints.down(\"lg\")]: {\n      fontSize: \"1.5rem\",\n      marginLeft: \"2em\"\n    }\n  }\n\n}));\n\nexport default function Greeting() {\n  const classes = useStyles();\n  const [checked, setChecked] = useState(true);\n  return (\n    <>\n      <Grid \n        container \n        direction=\"column\"\n        style={{ width: \"20em\"}}\n      >\n        <Grid item style={{ width: \"20em\" }}>\n          <Slide direction=\"right\" in={checked} timeout={3000}>\n            <Typography className={classes.greeting}>\n              Hi, my name is <span className={classes.name}>Chris Reed</span>\n            </Typography>\n          </Slide>\n        </Grid>\n          <Divider />\n        <Grid \n          item\n          className={classes.fullStackItem}>\n            <Typography \n              className={classes.fullStack}\n            >\n              Full-Stack Web Developer\n            </Typography>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\components\\ContentContainer\\Content\\Home.js",[],"C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\components\\ContentContainer\\ContentContainer.js",["107"],"import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport About from './Content/About';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  gridContainer: {\r\n    display: \"flex\",\r\n    margin: \"auto\",\r\n    marginLeft: \"-15em\",\r\n    marginTop: \"-15em\"\r\n  },\r\n  itemArea: {\r\n    borderColor: \"white\",\r\n  },\r\n  itemContainer: {\r\n  borderColor: \"white\"\r\n  }\r\n}))\r\n\r\nexport default function ContentContainer () {\r\nconst classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n        <Grid \r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          className={classes.gridContainer}\r\n        >\r\n          <Grid\r\n            className={classes.itemContainer} \r\n            item\r\n          >\r\n\r\n          </Grid>\r\n        </Grid>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\n",["108","109"],"C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\components\\ContentContainer\\Content\\About.js",["110","111","112","113"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { useTransition, animated, config } from 'react-spring'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridContainer: {\r\n    display: \"flex\",\r\n    width: \"50em\",\r\n    margin: \"auto\",\r\n    float: \"right\",\r\n    marginRight: \"25em\",\r\n    marginTop: \"-15em\",\r\n    [theme.breakpoints.down(\"lg\")]: {\r\n      marginRight: \"10em\"\r\n    },\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      marginRight: \"-7em\"\r\n    }\r\n  },\r\n  itemArea: {\r\n    borderColor: \"transparent\",\r\n  },\r\n  itemContainer: {\r\n    borderColor: \"transparent\",\r\n  },\r\n  root: {\r\n    height: \"25em\",\r\n    width: \"50em\",\r\n    marginTop: \"10em\",\r\n    marginLeft: \"5em\",\r\n    paddingBottom: \"1em\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"30em\",\r\n      height: \"50em\"\r\n    }\r\n  },\r\n  imgDiv: {\r\n    height: \"8em\",\r\n    width: \"100%\",\r\n    margin: \"auto\",\r\n    marginBottom: \"1.5em\",\r\n    backgroundColor: \"#697983\",\r\n  },\r\n  large: {\r\n    width: \"5.5em\",\r\n    height: \"7em\",\r\n    margin: \"auto\",\r\n  },\r\n  text: {\r\n    marginTop: \"0em\",\r\n    color: \"#374952\",\r\n    paddingLeft: \"2em\",\r\n    paddingRight: \"2em\",\r\n  },\r\n  adiv: {\r\n    width: \"100%\"\r\n  }\r\n}));\r\nexport default function About() {\r\n  const classes = useStyles();\r\n  const [index, setIndex] = useState(0);\r\n  const [show, set] = useState(false);\r\n\r\n  const transitions = useTransition(show, null, {\r\n    from: { opacity: 0, transform: \"translate(100%, 0)\"  },\r\n    enter: { opacity: 1, transform: \"translate(0%, 0)\" },\r\n    leave: { opacity: 1, transform: \"translate(-50%, 0)\" },\r\n    });\r\n\r\n\r\n  // const transitions = useTransition(index, item, key => item.key, {\r\n  //   config: config.gentle,\r\n  //   from: { opacity: 0, transform: \"translate(100%, 0)\" },\r\n  //   enter: { opacity: 1, transform: \"translate(0%, 0)\" },\r\n  //   leave: { opacity: 0, transform: \"translate(-50%, 0)\" },\r\n    \r\n  // });\r\n\r\n  return transitions.map(({ item, key, props}) =>\r\n    <>\r\n     <animated.div \r\n              className={classes.adiv}\r\n              style={props}\r\n              key={key}\r\n              >\r\n          \r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        className={classes.gridContainer}\r\n        >\r\n        <Grid className={classes.itemContainer} item></Grid>\r\n\r\n        <Card className={classes.root}>\r\n          <div className={classes.imgDiv}>\r\n            <Avatar\r\n              className={classes.large}\r\n              alt=\"Chris Reed\"\r\n              src=\"/images/ContactPicture.PNG\"\r\n            />\r\n          </div>\r\n          <CardContent>\r\n            <Typography\r\n              className={classes.text}\r\n              variant=\"h6\"\r\n              align=\"center\"\r\n              paragraph\r\n            >\r\n              I&apos;m a Full-Stack Web Developer with a previous background in\r\n              business where I&apos;ve worked as an analyst supporting Sales and\r\n              Supply and Distributions, leveraging both in-house applications\r\n              and Tableau to help drive data-based bussiness decisions. Recently\r\n              I&apos;ve completed a Full-Stack Web Development program at\r\n              Vanderbilt University where I&apos;ve developed skills in HTML,\r\n              CSS, and Javascript with focuses on <strong>M</strong>ongoDB{\" \"}\r\n              <strong>E</strong>xpress <strong>R</strong>\r\n              eact and <strong>N</strong>odeJS.\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      </animated.div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\components\\ContentContainer\\Content\\Resume.js",["114","115"],"C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\components\\ContentContainer\\Content\\Portfolio.js",["116","117","118","119","120"],"import React, { useState, useRef } from \"react\";\r\nimport {\r\n  useTransition,\r\n  useSpring,\r\n  useChain,\r\n  config,\r\n  animated,\r\n} from \"react-spring\";\r\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\r\nimport data from \"./data.json\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridContainer: {\r\n    display: \"flex\",\r\n    margin: \"auto\",\r\n    float: \"right\",\r\n    marginTop: \"-10em\",\r\n    marginRight: \"25em\",\r\n    width: \"40em\",\r\n    height: \"40em\",\r\n    \"& .MuiGrid-root\": {\r\n      [theme.breakpoints.down(\"lg\")]: {\r\n        marginLeft: \"30em\",\r\n        width: \"50em\",\r\n        height: \"40em\",\r\n      },\r\n      [theme.breakpoints.down(\"md\")]: {\r\n        marginLeft: \"55em\",\r\n        marginTop: \"2em\",\r\n        width: \"25em\",\r\n        height: \"100%\",\r\n      }\r\n    },\r\n  },\r\n  gridList: {\r\n    \"&::-webkit-scrollbar\": {\r\n      width: \"0.4em\",\r\n      height: 1,\r\n    },\r\n  },\r\n  itemArea: {\r\n    borderColor: \"white\",\r\n  },\r\n  itemContainer: {\r\n    borderColor: \"red\",\r\n    [theme.breakpoints.down(\"md\")]: {},\r\n  },\r\n  githubIcon: {\r\n    color: \"rgba(255, 255, 255, 0.54)\",\r\n    fontSize: \"2rem\",\r\n    display: \"inline\",\r\n    marginTop: \".25em\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      fontSize: \"1rem\",\r\n      marginTop: \"1em\",\r\n      marginLeft: \"0em\"\r\n    }\r\n  },\r\n  infoIcon: {\r\n    color: \"rgba(255, 255, 255, 0.54)\",\r\n    fontSize: \"2rem\",\r\n    display: \"inline\",\r\n    marginTop: \".125em\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      fontSize: \"1.1rem\",\r\n      marginTop: \"1em\", \r\n      marginLeft: \"-4em\"\r\n    }\r\n  },\r\n  tilebar: {\r\n    marginTop: \"-1em\",\r\n    \"& .MuiTypography-root\": {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      fontSize: \".75rem\",\r\n    }\r\n    }\r\n  },\r\n}));\r\n\r\nexport default function Portfolio() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, set] = useState(false);\r\n  const matches = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n\r\n  // const colMatches = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  // const gridListTileDisplay = colMatches ? \"listItems\" : \"flex\";\r\n  // const gridListTileWidth = colMatches ? \"100%\" : \"50%\";\r\n\r\n  const springRef = useRef();\r\n  const { size, opacity, ...rest } = useSpring({\r\n    ref: springRef,\r\n    config: config.default,\r\n    from: { size: \"1%\", backgroundColor: \"white\" },\r\n    to: { size: open ? \"100%\" : \"100%\", backgroundColor: \"#c4cacf\" },\r\n  });\r\n\r\n  const transRef = useRef();\r\n  // const transitions = useTransition(open ? data : , tile => tile.name, {\r\n  //   ref: transRef,\r\n  //   unique: true,\r\n  //   trail: 400 / data.length,\r\n  //   from: { opacity: 0, transform: 'scale(0)' },\r\n  //   enter: { opacity: 1, transform: 'translate3d(42px, -62px, -135px)' },\r\n  //   leave: { opacity: 0, transform: 'scale(0)' }\r\n  // })\r\n\r\n  useChain(open ? [springRef, transRef] : [transRef, springRef], [\r\n    0,\r\n    open ? 0.1 : 0.6,\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        className={classes.gridContainer}\r\n      >\r\n        <Grid className={classes.itemContainer} item>\r\n          <animated.div\r\n            style={{\r\n              ...rest,\r\n              width: size,\r\n              height: size,\r\n              position: \"relative\",\r\n              display: \"flex\",\r\n              padding: \"25px\",\r\n              borderRadius: \"5px\",\r\n              cursor: \"pointer\",\r\n              boxShadow: \"0px 10px 10px -5px rgba(0, 0, 0, 0.05)\",\r\n            }}\r\n          >\r\n            <GridList cellHeight={\"auto\"} className={classes.gridList}>\r\n              <GridListTile key=\"Subheader\" cols={2}>\r\n                <ListSubheader component=\"div\" />\r\n              </GridListTile>\r\n              {data.map((tile, key, props) => (\r\n                <>\r\n                  <GridListTile\r\n                    className={classes.gridListTile}\r\n                    key={tile.image}\r\n                    style={{\r\n                      width: \"50%\",\r\n                      height: \"12.5rem\",\r\n                      paddingRight: \"1rem\",\r\n                      paddingLeft: \"1rem\",\r\n                      display: \"flex\",\r\n                      margin: \"auto\",\r\n                    }}\r\n                  >\r\n                    <Link href={tile.live} target=\"_blank\" rel=\"noopener\">\r\n                      <img\r\n                        src={process.env.PUBLIC_URL + tile.image}\r\n                        alt={tile.tile}\r\n                      />\r\n                    </Link>\r\n                    <CardHeader\r\n                      className={classes.tilebar}\r\n                      title={tile.title}\r\n                      style={{\r\n                        backgroundColor: \"black\",\r\n                        opacity: \".75\",\r\n                        color: \"white\",\r\n                        height: \"2.5em\",\r\n                        \r\n                      }}\r\n                      action={\r\n                        <>\r\n                          <Button\r\n                            aria-label={\"GitHub Repo Link\"}\r\n                            component={Link}\r\n                            href={tile.repo}\r\n                          >\r\n                            <GitHubIcon\r\n                              className={classes.githubIcon}\r\n                            />\r\n                          </Button>\r\n                          {/* <Button\r\n                            className={classes.icon}\r\n                            aria-label={`info about ${tile.title}`}\r\n                          >\r\n                            <InfoIcon className={classes.infoIcon} />\r\n                          </Button> */}\r\n                        </>\r\n                      }\r\n                    ></CardHeader>\r\n\r\n                    {/* <GridListTileBar\r\n                    className={classes.tileBar}\r\n                    title={tile.title}\r\n                    actionIcon={\r\n                      <Button\r\n                        className={classes.icon}\r\n                        aria-label={`info about ${tile.title}`}\r\n                      >\r\n                        <InfoIcon className={classes.icon} />\r\n                      </Button>\r\n                    }\r\n                  ></GridListTileBar> */}\r\n                  </GridListTile>\r\n                </>\r\n              ))}\r\n            </GridList>\r\n          </animated.div>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\components\\Divider\\divider.js",["121"],"import React, { useState } from 'react';\r\nimport './styles.css';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nexport default function Divider() {\r\nconst [checked, setChecked] = useState(true);\r\n  return (\r\n    <>\r\n    <Slide direction=\"right\" in={checked} timeout={3000}>\r\n      <div className=\"div-divider\">\r\n\r\n      </div>\r\n    </Slide>\r\n    </>\r\n  )\r\n}","C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\pages\\Contact\\index.js",[],"C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\components\\ContentContainer\\Content\\Contact.js",["122","123","124","125","126","127","128","129"],"import React, { useState, useRef, useMemo } from 'react';\r\nimport { render } from 'react-dom';\r\nimport { useTransition, a } from 'react-spring';\r\nimport useMedia from './useMedia';\r\nimport shuffle from 'lodash/shuffle';\r\n\r\n\r\nexport default function Contact () {\r\n  // tie media queries to number of columns\r\n  const columns = useMedia(['(min-width: 1500px)', '(min-width: 1000px)', '(min-width: 600px)'], [5, 4, 3], 2);\r\n  // measure width of the container element\r\n  // const [bind, { width }] = useMeasure()\r\n  return (\r\n    <> \r\n      \r\n    </>\r\n  )\r\n}","C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\Working\\chrisreed\\src\\components\\ContentContainer\\Content\\useMedia.js",["130"],"import { useEffect, useState } from 'react';\r\n\r\nexport default function useMedia(queries, values, defaultValue) {\r\n  const match = () => values[queries.findIndex(q => matchMedia(q).matches)] || defaultValue\r\n  const [value, set] = useState(match)\r\n  useEffect(() => {\r\n    const handler = () => set(match)\r\n    window.addEventListener('resize', handler)\r\n    return () => window.removeEventListener(handler)\r\n  }, [])\r\n  return value\r\n}\r\n",{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":19,"column":9,"nodeType":"137","messageId":"138","endLine":19,"endColumn":16},{"ruleId":"135","severity":1,"message":"139","line":1,"column":38,"nodeType":"137","messageId":"138","endLine":1,"endColumn":49},{"ruleId":"135","severity":1,"message":"140","line":8,"column":22,"nodeType":"137","messageId":"138","endLine":8,"endColumn":30},{"ruleId":"135","severity":1,"message":"141","line":63,"column":10,"nodeType":"137","messageId":"138","endLine":63,"endColumn":15},{"ruleId":"135","severity":1,"message":"142","line":63,"column":17,"nodeType":"137","messageId":"138","endLine":63,"endColumn":25},{"ruleId":"143","severity":1,"message":"144","line":69,"column":9,"nodeType":"145","endLine":75,"endColumn":4},{"ruleId":"135","severity":1,"message":"146","line":3,"column":8,"nodeType":"137","messageId":"138","endLine":3,"endColumn":18},{"ruleId":"135","severity":1,"message":"147","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":14},{"ruleId":"135","severity":1,"message":"148","line":8,"column":16,"nodeType":"137","messageId":"138","endLine":8,"endColumn":19},{"ruleId":"135","severity":1,"message":"149","line":68,"column":19,"nodeType":"137","messageId":"138","endLine":68,"endColumn":29},{"ruleId":"135","severity":1,"message":"150","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":13},{"ruleId":"131","replacedBy":"151"},{"ruleId":"133","replacedBy":"152"},{"ruleId":"135","severity":1,"message":"153","line":3,"column":35,"nodeType":"137","messageId":"138","endLine":3,"endColumn":41},{"ruleId":"135","severity":1,"message":"141","line":66,"column":10,"nodeType":"137","messageId":"138","endLine":66,"endColumn":15},{"ruleId":"135","severity":1,"message":"142","line":66,"column":17,"nodeType":"137","messageId":"138","endLine":66,"endColumn":25},{"ruleId":"135","severity":1,"message":"148","line":67,"column":16,"nodeType":"137","messageId":"138","endLine":67,"endColumn":19},{"ruleId":"135","severity":1,"message":"153","line":2,"column":35,"nodeType":"137","messageId":"138","endLine":2,"endColumn":41},{"ruleId":"135","severity":1,"message":"148","line":29,"column":16,"nodeType":"137","messageId":"138","endLine":29,"endColumn":19},{"ruleId":"135","severity":1,"message":"154","line":3,"column":3,"nodeType":"137","messageId":"138","endLine":3,"endColumn":16},{"ruleId":"135","severity":1,"message":"155","line":17,"column":8,"nodeType":"137","messageId":"138","endLine":17,"endColumn":23},{"ruleId":"135","severity":1,"message":"156","line":19,"column":8,"nodeType":"137","messageId":"138","endLine":19,"endColumn":16},{"ruleId":"135","severity":1,"message":"148","line":94,"column":16,"nodeType":"137","messageId":"138","endLine":94,"endColumn":19},{"ruleId":"135","severity":1,"message":"157","line":95,"column":9,"nodeType":"137","messageId":"138","endLine":95,"endColumn":16},{"ruleId":"135","severity":1,"message":"149","line":6,"column":17,"nodeType":"137","messageId":"138","endLine":6,"endColumn":27},{"ruleId":"135","severity":1,"message":"158","line":1,"column":17,"nodeType":"137","messageId":"138","endLine":1,"endColumn":25},{"ruleId":"135","severity":1,"message":"159","line":1,"column":27,"nodeType":"137","messageId":"138","endLine":1,"endColumn":33},{"ruleId":"135","severity":1,"message":"160","line":1,"column":35,"nodeType":"137","messageId":"138","endLine":1,"endColumn":42},{"ruleId":"135","severity":1,"message":"161","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":16},{"ruleId":"135","severity":1,"message":"154","line":3,"column":10,"nodeType":"137","messageId":"138","endLine":3,"endColumn":23},{"ruleId":"135","severity":1,"message":"162","line":3,"column":25,"nodeType":"137","messageId":"138","endLine":3,"endColumn":26},{"ruleId":"135","severity":1,"message":"163","line":5,"column":8,"nodeType":"137","messageId":"138","endLine":5,"endColumn":15},{"ruleId":"135","severity":1,"message":"164","line":10,"column":9,"nodeType":"137","messageId":"138","endLine":10,"endColumn":16},{"ruleId":"143","severity":1,"message":"165","line":10,"column":6,"nodeType":"166","endLine":10,"endColumn":8,"suggestions":"167"},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","'useCallback' is defined but never used.","'useTheme' is defined but never used.","'index' is assigned a value but never used.","'setIndex' is assigned a value but never used.","react-hooks/exhaustive-deps","The 'routes' array makes the dependencies of useEffect Hook (at line 89) change on every render. To fix this, wrap the initialization of 'routes' in its own useMemo() Hook.","VariableDeclarator","'GetAppIcon' is defined but never used.","'Button' is defined but never used.","'set' is assigned a value but never used.","'setChecked' is assigned a value but never used.","'About' is defined but never used.",["168"],["169"],"'config' is defined but never used.","'useTransition' is defined but never used.","'GridListTileBar' is defined but never used.","'InfoIcon' is defined but never used.","'matches' is assigned a value but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'useMemo' is defined but never used.","'render' is defined but never used.","'a' is defined but never used.","'shuffle' is defined but never used.","'columns' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'match'. Either include it or remove the dependency array.","ArrayExpression",["170"],"no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},"Update the dependencies array to be: [match]",{"range":"173","text":"174"},[414,416],"[match]"]